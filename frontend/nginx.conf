user  nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid       /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;
    #gzip  on;

    server {
        listen 80;
        server_name localhost;

        root /usr/share/nginx/html;  # 정적 파일 경로 설정
        index index.html;            # 기본 파일 설정

        location / {
            try_files $uri /index.html;  # React Router를 위한 fallback 처리
        }

        location /api/ {
            proxy_pass http://backend:8000/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }
    }
}

# http {
#     server {
#         listen 80;
#         server_name localhost;

#         root /usr/share/nginx/html;  # ✅ 정적 파일 경로 설정
#         index index.html;  # ✅ index.html을 기본 파일로 설정

#         location / {
#             try_files $uri /index.html;  # ✅ React Router를 위해 index.html 제공
#         }

#         location /api/ {
#             proxy_pass http://backend:8000/;
#             proxy_set_header Host $host;
#             proxy_set_header X-Real-IP $remote_addr;
#         }
#     }
# }